# ATM Machine Simulation
class ATM:
    def __init__(self, balance=0):
        self.balance = balance            # User's account balance
        self.pin = "1234"                 # Default PIN
        self.transaction_history = []     # List to store transaction history

    # Method to check account balance
    def check_balance(self):
        print(f"\nYour current balance is: ${self.balance:.2f}")
        self.transaction_history.append("Checked balance")

    # Method for cash withdrawal
    def withdraw_cash(self, amount):
        if amount <= self.balance:
            self.balance -= amount
            print(f"\nSuccessfully withdrew: ${amount:.2f}")
            self.transaction_history.append(f"Withdrew ${amount:.2f}")
        else:
            print("\nInsufficient balance!")

    # Method for cash deposit
    def deposit_cash(self, amount):
        self.balance += amount
        print(f"\nSuccessfully deposited: ${amount:.2f}")
        self.transaction_history.append(f"Deposited ${amount:.2f}")

    # Method to change PIN
    def change_pin(self, old_pin, new_pin):
        if old_pin == self.pin:
            self.pin = new_pin
            print("\nPIN changed successfully!")
            self.transaction_history.append("Changed PIN")
        else:
            print("\nIncorrect old PIN!")

    # Method to display transaction history
    def show_transaction_history(self):
        print("\nTransaction History:")
        if not self.transaction_history:
            print("No transactions yet.")
        else:
            for i, transaction in enumerate(self.transaction_history, 1):
                print(f"{i}. {transaction}")


# Function to display ATM menu
def display_menu():
    print("\nATM Machine Menu:")
    print("1. Balance Inquiry")
    print("2. Withdraw Cash")
    print("3. Deposit Cash")
    print("4. Change PIN")
    print("5. Transaction History")
    print("6. Exit")

# Main program to simulate ATM functionality
def atm_simulation():
    atm = ATM(balance=1000)  # Initialize the ATM with a default balance
    print("Welcome to the ATM Machine Simulation!")

    # Check PIN at the start
    user_pin = input("Please enter your PIN: ")
    if user_pin != atm.pin:
        print("\nIncorrect PIN! Exiting.")
        return

    while True:
        display_menu()
        choice = input("\nSelect an option (1-6): ")

        # Balance Inquiry
        if choice == "1":
            atm.check_balance()

        # Withdraw Cash
        elif choice == "2":
            try:
                amount = float(input("\nEnter amount to withdraw: $"))
                atm.withdraw_cash(amount)
            except ValueError:
                print("Invalid input! Please enter a valid amount.")

        # Deposit Cash
        elif choice == "3":
            try:
                amount = float(input("\nEnter amount to deposit: $"))
                atm.deposit_cash(amount)
            except ValueError:
                print("Invalid input! Please enter a valid amount.")

        # Change PIN
        elif choice == "4":
            old_pin = input("\nEnter your current PIN: ")
            new_pin = input("Enter your new PIN: ")
            atm.change_pin(old_pin, new_pin)

        # View Transaction History
        elif choice == "5":
            atm.show_transaction_history()

        # Exit the ATM simulation
        elif choice == "6":
            print("\nThank you for using the ATM! Goodbye!")
            break

        else:
            print("\nInvalid choice! Please try again.")

# Run the ATM simulation
if __name__ == "__main__":
    atm_simulation()
